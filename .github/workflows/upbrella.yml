name: Upbrella DEV CI

on:
  push:
    branches: [ "feat/#9-CICD-setting" ]
    

env:
  WORKING_DIRECTORY: ./
  APPLICATION_NAME: UPBRELLA_SERVER_DEV
  DOCKERFILE_DIRECTORY: ./.github/workflows
  CODE_DEPLOY_APPLICATION_NAME: UpbrellaCodeDeploy
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: UpbrellaServerDev

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - name: checkout
      uses: actions/checkout@v3

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Set application properties
      run:
        touch ${{ env.WORKING_DIRECTORY }}src/main/resources/application.properties
        echo "${{ secrets.APPLICATION_PROPERTIES }}" > ${{ env.WORKING_DIRECTORY }}src/main/resources/application.properties
     
    - name: Build with Gradle
      run: |
        chmod +x gradlew
        ./gradlew clean build
      env:
        WORKING_DIRECTORY: ${{ env.WORKING_DIRECTORY }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} 
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
        aws-region: ${{ secrets.AWS_REGION }} 

    - name: Build Docker Image and Push Docker Image to AWS ECR
      run:  |
        docker build --platform amd64 --build-arg DEPENDENCY=build/dependency -f ${{ env.DOCKERFILE_DIRECTORY }}/Dockerfile .
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }}  
        | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
        docker tag ${{ env.APPLICATION_NAME }}:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/upbrella
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/upbrella


    - name: Docker Image to Code Deploy
      run: | 
        aws deploy create-deployment
        --deployment-config-name CodeDeployDefault.AllAtOnce
        --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }}
        --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }}