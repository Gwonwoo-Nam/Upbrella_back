name: Upbrella DEV CI

on:
  push:
    branches: [ "release-dev", "feat-161-backend-pipeline" ]

env:
  WORKING_DIRECTORY: ./
  DOCKERFILE_DIRECTORY: ./.github/workflows
  ECS_SERVICE: upbrella-server
  ECS_CLUSTER: upbrella-cluster
  ECR_REPOSITORY: upbrella-ecr
  CONTAINER_NAME: upbrella-server

permissions:
  contents: read
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - name: checkout
      uses: actions/checkout@v3

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Set application properties
      run: |
        touch src/main/resources/application.properties
        echo "${{ secrets.APPLICATION_PROPERTIES_DEV }}" > src/main/resources/application.properties
     
    - name: Build with Gradle
      run: |
        chmod +x gradlew
        ./gradlew clean build
      env:
        WORKING_DIRECTORY: ${{ env.WORKING_DIRECTORY }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-region: ap-northeast-2
        role-session-name: GitHubActions
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: docker build and push
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        sudo docker buildx build --load --platform linux/amd64 -t upbrella-ecr .
        sudo docker tag upbrella-ecr:latest 641876149891.dkr.ecr.ap-northeast-2.amazonaws.com/upbrella-ecr:latest
        sudo docker push 641876149891.dkr.ecr.ap-northeast-2.amazonaws.com/upbrella-ecr:latest

    - name: Get latest ECS task definition
      id: get-latest-task-def
      run: |
        TASK_DEF=$(aws ecs describe-services --cluster ${ECS_CLUSTER} --services ${ECS_SERVICE} --region ${AWS_REGION} --query "services[0].taskDefinition" --output text)
        aws ecs describe-task-definition --task-definition $TASK_DEF --region ${AWS_REGION} --query "taskDefinition" --output json > task-definition.json
        echo "TASK_DEF_JSON=$(pwd)/task-definition.json" >> $GITHUB_ENV

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ env.TASK_DEF_JSON }}
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ steps.build-image.outputs.image }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true
